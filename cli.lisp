(load "game.lisp")

(defun quit ()
  #+sbcl (sb-ext:quit)
  #+clisp (ext:exit)
  #+ccl (ccl:quit)
  #+allegro (excl:exit))

(defun choose ()
  (terpri)
  (format t "1 - look~%")
  (format t "2 - walk~%")
  (format t "3 - pick up~%")
  (format t "4 - inventory~%")
  (format t "5 - exit~%")
  (format t "-> ")
  (let ((number (read)))
    (terpri)
    (case number
      ((1)
        (format t "~a" (string-downcase (format nil "~a" (look))))
        (terpri))
      ((2)
        (format t "where do you want to walk? -> ")
        (let ((where (read)))
          (format t "~a" (string-downcase (format nil "~a" (walk where))))
          (terpri)))
      ((3)
        (print "what do you want to pick up? -> ")
        (let ((pick (read)))
          (format t "~a" (string-downcase (format nil "~a" (pickup pick))))
          (terpri)))
      ((4)
        (format t "~a" (string-downcase (format nil "~a" (inventory))))
        (terpri))
      ((5)
        (quit))
      (otherwise (format t "choose one between 1 and 5!!")))))

(loop
  (choose)
)
